{"ast":null,"code":"import _defineProperty from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\src\\\\components\\\\Activity\\\\ShowActivity.js\";\nimport React, { Component } from 'react'; // on importe createContext qui servira à la création d'un ou plusieurs contextes\n\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { Line } from 'react-chartjs-2';\nimport API from '../../utils/API';\nexport var ShowActivity =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowActivity, _React$Component);\n\n  function ShowActivity(props) {\n    var _this;\n\n    _classCallCheck(this, ShowActivity);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowActivity).call(this, props));\n\n    _this.send = function (event) {\n      var currentComponent = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var value = event.target.id;\n      var activity = event.target.parentNode.id;\n      var note = _this.refs[activity].value;\n      API.checkToken(localStorage.getItem('token')).then(function (data) {\n        if (data.request.status === 200) {\n          console.log(value, activity, note);\n          API.createMood(value, activity, note).then(function (data) {\n            console.log(data);\n            currentComponent.componentDidMount();\n          }, function (error) {\n            console.log(error);\n            return;\n          });\n        }\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    var id = props.match.params.id;\n    _this.state = {\n      activitie: \"\",\n      history: [],\n      activity_id: id\n    };\n\n    _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.send.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(ShowActivity, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      API.checkToken(localStorage.getItem('token')).then(function (data) {\n        if (data.request.status === 200) {\n          console.log(currentComponent.state.activity_id);\n          API.showActivity(currentComponent.state.activity_id).then(function (data) {\n            console.log(data);\n            currentComponent.setState({\n              activitie: data.data.activity\n            });\n            currentComponent.setState({\n              history: data.data.activity.moods\n            });\n          }, function (error) {\n            console.log(error);\n            return;\n          });\n        }\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: this.state.activitie.name,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 1,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 3,\n          data: [10, 12, 15, 12, 14, 18, 20]\n        }]\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.activitie.name), React.createElement(\"ul\", {\n        id: this.state.activitie._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: \"1\",\n        onClick: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Happy\"), React.createElement(\"li\", {\n        id: \"2\",\n        onClick: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Not happy\"), React.createElement(\"li\", {\n        id: \"3\",\n        onClick: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Angry\"), React.createElement(\"textarea\", {\n        className: \"FormControl\",\n        ref: this.state.activitie._id,\n        name: \"\",\n        id: \"\",\n        cols: \"30\",\n        rows: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"History\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"History\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.history.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, new Date(item.created_at).toLocaleDateString(), \" - \", item.value), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, item.note));\n      }).reverse())));\n    }\n  }]);\n\n  return ShowActivity;\n}(React.Component);","map":{"version":3,"sources":["C:\\wamp64\\www\\Apptest\\client\\src\\components\\Activity\\ShowActivity.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","Line","API","ShowActivity","props","send","event","currentComponent","value","target","id","activity","parentNode","note","refs","checkToken","localStorage","getItem","then","data","request","status","console","log","createMood","componentDidMount","error","handleChange","setState","match","params","state","activitie","history","activity_id","bind","showActivity","moods","labels","datasets","label","name","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","_id","map","item","i","Date","created_at","toLocaleDateString","reverse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';// on importe createContext qui servira à la création d'un ou plusieurs contextes\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\nimport API from '../../utils/API';\r\n\r\n\r\n\r\nexport class ShowActivity extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {id} = props.match.params;\r\n        this.state = {\r\n            activitie : \"\",\r\n            history : [],\r\n            activity_id : id,\r\n        }\r\n        this.handleChange.bind(this);\r\n        this.send.bind(this);\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let currentComponent = this;\r\n        API.checkToken(localStorage.getItem('token')).then(function(data){\r\n            if(data.request.status === 200){\r\n                console.log(currentComponent.state.activity_id);\r\n                API.showActivity(currentComponent.state.activity_id).then(function (data) {\r\n                    console.log(data)\r\n                    currentComponent.setState({ activitie : data.data.activity })\r\n                    currentComponent.setState({ history : data.data.activity.moods })\r\n                },function (error) {\r\n                    console.log(error);\r\n                    return;\r\n                })\r\n            }\r\n        },function (error) {\r\n            console.log(error);\r\n            return;\r\n        })\r\n\r\n    }\r\n\r\n    send = event => {\r\n        const currentComponent = this;\r\n        var value = event.target.id;\r\n        var activity = event.target.parentNode.id;\r\n        var note = this.refs[activity].value;\r\n        API.checkToken(localStorage.getItem('token')).then(function(data){\r\n            if(data.request.status === 200){\r\n                console.log(value,activity,note);\r\n                API.createMood(value,activity,note).then(function (data) {\r\n                    console.log(data);\r\n                    currentComponent.componentDidMount();\r\n                },function (error) {\r\n                    console.log(error);\r\n                    return;\r\n                })\r\n            }\r\n        },function (error) {\r\n            console.log(error);\r\n            return;\r\n        })\r\n\r\n    }\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const data = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: this.state.activitie.name,\r\n                    fill: false,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(75,192,192,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 1,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 3,\r\n                    data: [10, 12, 15, 12, 14, 18, 20]\r\n                }\r\n            ]\r\n        };\r\n\r\n        return(\r\n            <div>\r\n            <div>\r\n                <h1>{this.state.activitie.name}</h1>\r\n                <ul id={this.state.activitie._id}>\r\n                    <li id='1' onClick={this.send}>Happy</li>\r\n                    <li id='2' onClick={this.send}>Not happy</li>\r\n                    <li id='3' onClick={this.send}>Angry</li>\r\n                    <textarea className=\"FormControl\" ref={this.state.activitie._id} name=\"\" id=\"\" cols=\"30\" rows=\"10\"/>\r\n               </ul>\r\n            </div>\r\n            <div>\r\n            <h2>History</h2>\r\n                <div>\r\n                    <Line data={data} />\r\n                </div>\r\n            <h2>History</h2>\r\n                <ul>\r\n                    {this.state.history.map((item,i) =>\r\n                        <li key={i}>\r\n\r\n                            <p>{new Date(item.created_at).toLocaleDateString()} - {item.value}</p>\r\n                            <p>{item.note}</p>\r\n                        </li>\r\n                    ).reverse()}\r\n\r\n                </ul>\r\n            </div>\r\n            </div>\r\n    )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}