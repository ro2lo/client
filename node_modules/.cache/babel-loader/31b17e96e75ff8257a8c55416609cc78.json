{"ast":null,"code":"import _defineProperty from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\src\\\\components\\\\Activity\\\\ShowActivity.js\";\nimport React, { createContext, Component } from 'react'; // on importe createContext qui servira à la création d'un ou plusieurs contextes\n\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport API from '../../utils/API';\nexport var ShowActivity =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowActivity, _React$Component);\n\n  function ShowActivity(props) {\n    var _this;\n\n    _classCallCheck(this, ShowActivity);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowActivity).call(this, props));\n\n    _this.send = function (event) {\n      if (_this.state.name.length === 0) {\n        return;\n      }\n\n      if (_this.state.frequence.length === 0) {\n        return;\n      }\n\n      API.checkToken(localStorage.getItem('token')).then(function (data) {\n        if (data.request.status === 200) {\n          var value = event.target.id;\n          var activity = event.target.parentNode.id;\n          var note = this.refs[activity].value;\n          console.log(value, activity, note);\n          API.createMood(value, activity, note).then(function (data) {\n            console.log(data);\n          }, function (error) {\n            console.log(error);\n            return;\n          });\n        }\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    var id = props.match.params.id;\n    _this.state = {\n      activitie: \"\",\n      activity_id: id\n    };\n\n    _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.send.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(ShowActivity, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentComponent = this;\n      API.checkToken(localStorage.getItem('token')).then(function (data) {\n        if (data.request.status === 200) {\n          console.log(currentComponent.state.id);\n          API.showActivity(currentComponent.state.id).then(function (data) {\n            console.log(data);\n          }, function (error) {\n            console.log(error);\n            return;\n          });\n        }\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ShowActivity;\n}(React.Component);","map":{"version":3,"sources":["C:\\wamp64\\www\\Apptest\\client\\src\\components\\Activity\\ShowActivity.js"],"names":["React","createContext","Component","Button","FormGroup","FormControl","ControlLabel","API","ShowActivity","props","send","event","state","name","length","frequence","checkToken","localStorage","getItem","then","data","request","status","value","target","id","activity","parentNode","note","refs","console","log","createMood","error","handleChange","setState","match","params","activitie","activity_id","bind","currentComponent","showActivity"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from 'react';// on importe createContext qui servira à la création d'un ou plusieurs contextes\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport API from '../../utils/API';\r\n\r\n\r\nexport class ShowActivity extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {id} = props.match.params\r\n        this.state = {\r\n            activitie : \"\",\r\n            activity_id : id,\r\n        }\r\n        this.handleChange.bind(this);\r\n        this.send.bind(this);\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let currentComponent = this;\r\n        API.checkToken(localStorage.getItem('token')).then(function(data){\r\n            if(data.request.status === 200){\r\n                console.log(currentComponent.state.id);\r\n                API.showActivity(currentComponent.state.id).then(function (data) {\r\n                    console.log(data)\r\n                },function (error) {\r\n                    console.log(error);\r\n                    return;\r\n                })\r\n            }\r\n        },function (error) {\r\n            console.log(error);\r\n            return;\r\n        })\r\n\r\n    }\r\n\r\n    send = event => {\r\n        if(this.state.name.length === 0){\r\n            return;\r\n        }\r\n        if(this.state.frequence.length === 0){\r\n            return;\r\n        }\r\n        API.checkToken(localStorage.getItem('token')).then(function(data){\r\n            if(data.request.status === 200){\r\n                var value = event.target.id;\r\n                var activity = event.target.parentNode.id;\r\n                var note = this.refs[activity].value;\r\n                console.log(value,activity,note);\r\n                API.createMood(value,activity,note).then(function (data) {\r\n                    console.log(data)\r\n                },function (error) {\r\n                    console.log(error);\r\n                    return;\r\n                })\r\n            }\r\n        },function (error) {\r\n            console.log(error);\r\n            return;\r\n        })\r\n\r\n    }\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}