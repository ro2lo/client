{"ast":null,"code":"import _defineProperty from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { createContext, Component } from 'react'; // on importe createContext qui servira à la création d'un ou plusieurs contextes\n\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport API from '../../utils/API';\n/**\r\n * `createContext` contient 2 propriétés :\r\n * `Provider` et `Consumer`. Nous les rendons accessibles\r\n * via la constante `UserContext` et on initialise une\r\n * propriété par défaut \"name\" qui sera une chaîne vide.\r\n * On exporte ce contexte afin qu'il soit exploitable par\r\n * d'autres composants par la suite via le `Consumer`\r\n */\n\nexport var UserContext = createContext({\n  username: \"\"\n});\nexport var Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.send = function (event) {\n      if (_this.state.email.length === 0) {\n        return;\n      }\n\n      if (_this.state.password.length === 0) {\n        return;\n      }\n\n      API.login(_this.state.email, _this.state.password).then(function (data) {\n        localStorage.setItem('token', data.data.token);\n        this.state.username = data.data.username;\n        window.location = \"/dashboard\";\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.send.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"email\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        value: this.state.password,\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.send,\n        block: true,\n        bsSize: \"large\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Connexion\"));\n    }\n  }]);\n\n  return Login;\n}(React.Component);","map":{"version":3,"sources":["C:\\wamp64\\www\\Apptest\\client\\src\\components\\Login\\Login.js"],"names":["React","createContext","Component","Button","FormGroup","FormControl","ControlLabel","API","UserContext","username","Login","props","send","event","state","email","length","password","login","then","data","localStorage","setItem","token","window","location","error","console","log","handleChange","setState","target","id","value","bind"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from 'react';// on importe createContext qui servira à la création d'un ou plusieurs contextes\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport API from '../../utils/API';\r\n\r\n/**\r\n * `createContext` contient 2 propriétés :\r\n * `Provider` et `Consumer`. Nous les rendons accessibles\r\n * via la constante `UserContext` et on initialise une\r\n * propriété par défaut \"name\" qui sera une chaîne vide.\r\n * On exporte ce contexte afin qu'il soit exploitable par\r\n * d'autres composants par la suite via le `Consumer`\r\n */\r\n\r\nexport const UserContext = createContext({\r\n    username: \"\",\r\n});\r\n\r\nexport class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username : \"\",\r\n            email : \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleChange.bind(this);\r\n        this.send.bind(this);\r\n    }\r\n    send = event => {\r\n    if(this.state.email.length === 0){\r\n        return;\r\n    }\r\nif(this.state.password.length === 0){\r\n    return;\r\n}\r\nAPI.login(this.state.email, this.state.password).then(function(data){\r\n    localStorage.setItem('token', data.data.token);\r\n    this.state.username = data.data.username;\r\n    window.location = \"/dashboard\"\r\n},function(error){\r\n    console.log(error);\r\n    return;\r\n})\r\n}\r\nhandleChange = event => {\r\n    this.setState({\r\n        [event.target.id]: event.target.value\r\n    });\r\n}\r\nrender() {\r\n    return(\r\n    <div className=\"Login\">\r\n    <FormGroup controlId=\"email\" bsSize=\"large\">\r\n        <ControlLabel>Email</ControlLabel>\r\n        <FormControl autoFocus type=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n    </FormGroup>\r\n    <FormGroup controlId=\"password\" bsSize=\"large\">\r\n        <ControlLabel>Password</ControlLabel>\r\n        <FormControl value={this.state.password} onChange={this.handleChange} type=\"password\"/>\r\n    </FormGroup>\r\n        <Button\r\n    onClick={this.send}\r\n    block\r\n    bsSize=\"large\"\r\n    type=\"submit\"\r\n        >\r\n        Connexion\r\n        </Button>\r\n    </div>\r\n)\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}