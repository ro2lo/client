{"ast":null,"code":"import _defineProperty from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Apptest\\\\client\\\\src\\\\components\\\\Activity\\\\ShowActivity.js\";\nimport React, { Component } from 'react'; // on importe createContext qui servira à la création d'un ou plusieurs contextes\n\nimport { Button, FormGroup, FormControl, ControlLabel, Col, Radio } from \"react-bootstrap\";\nimport { Line, Radar, Bar } from 'react-chartjs-2';\nimport API from '../../utils/API';\nexport var ShowActivity =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowActivity, _React$Component);\n\n  function ShowActivity(props) {\n    var _this;\n\n    _classCallCheck(this, ShowActivity);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowActivity).call(this, props));\n\n    _this.makeChart = function () {\n      var currentComponent = _assertThisInitialized(_assertThisInitialized(_this));\n\n      API.checkToken(localStorage.getItem('token')).then(function (data) {\n        if (data.request.status === 200) {\n          console.log(currentComponent.state.activity_id);\n          API.showActivity(currentComponent.state.activity_id).then(function (data) {\n            console.log(data);\n            currentComponent.setState({\n              activitie: data.data.activity\n            });\n            currentComponent.setState({\n              history: data.data.activity.moods\n            });\n          }, function (error) {\n            console.log(error);\n            return;\n          });\n        }\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    };\n\n    _this.send = function (event) {\n      if (_this.state.value.length === 0) {\n        return;\n      }\n\n      if (_this.state.note.length === 0) {\n        _this.state.note = \"\";\n      }\n\n      var currentComponent = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var value = _this.state.value;\n      var note = _this.state.note;\n      var activity = event.target.parentNode.id;\n      API.checkToken(localStorage.getItem('token')).then(function (data) {\n        if (data.request.status === 200) {\n          console.log(value, activity, note);\n          API.createMood(value, activity, note).then(function (data) {\n            console.log(data);\n            currentComponent.componentDidMount();\n          }, function (error) {\n            console.log(error);\n            return;\n          });\n        }\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleChart = function (event) {\n      _this.setState({\n        tag: event.target.value\n      });\n\n      _this.componentDidMount();\n    };\n\n    var id = props.match.params.id;\n    _this.state = {\n      activitie: \"\",\n      components: {\n        line: Line,\n        radar: Radar,\n        bar: Bar\n      },\n      tag: 'line',\n      value: \"\",\n      label: new Date.now(),\n      note: \"\",\n      history: [],\n      activity_id: id\n    };\n\n    _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.send.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(ShowActivity, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.makeChart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var TagName = this.state.components[this.state.tag || 'line'];\n      var values = [];\n      var labels = [];\n      this.state.history.map(function (item, i) {\n        return values.push(item.value);\n      });\n      this.state.history.map(function (item, i) {\n        return labels.push(new Date(item.created_at).toLocaleDateString());\n      });\n      var data = {\n        labels: labels,\n        datasets: [{\n          label: this.state.activitie.name,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 1,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 3,\n          data: values\n        }]\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.activitie.name), React.createElement(\"ul\", {\n        id: this.state.activitie._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"value\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Ajouter une valeur\"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"label\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Ajouter un label\"), React.createElement(FormControl, {\n        type: \"date\",\n        value: this.state.label,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"note\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Ajouter une note (optionnel)\"), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        value: this.state.note,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.send,\n        block: true,\n        bsSize: \"large\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Ajouter\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"col-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Chart\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        onChange: this.handleChart,\n        value: \"line\",\n        name: \"radioGroup\",\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Line\"), ' ', React.createElement(Radio, {\n        onChange: this.handleChart,\n        value: \"radar\",\n        name: \"radioGroup\",\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Radar\"), ' ', React.createElement(Radio, {\n        onChange: this.handleChart,\n        value: \"bar\",\n        name: \"radioGroup\",\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Bar\"), ' '), React.createElement(TagName, {\n        data: data,\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                max: this.state.activitie.max,\n                min: this.state.activitie.min\n              }\n            }]\n          }\n        },\n        width: 50,\n        height: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Historique\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.state.history.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, new Date(item.created_at).toLocaleDateString(), \" - \", item.value), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, item.note));\n      }).reverse()))));\n    }\n  }]);\n\n  return ShowActivity;\n}(React.Component);","map":{"version":3,"sources":["C:\\wamp64\\www\\Apptest\\client\\src\\components\\Activity\\ShowActivity.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","Col","Radio","Line","Radar","Bar","API","ShowActivity","props","makeChart","currentComponent","checkToken","localStorage","getItem","then","data","request","status","console","log","state","activity_id","showActivity","setState","activitie","activity","history","moods","error","send","event","value","length","note","target","parentNode","id","createMood","componentDidMount","handleChange","handleChart","tag","match","params","components","line","radar","bar","label","Date","now","bind","TagName","values","labels","map","item","i","push","created_at","toLocaleDateString","datasets","name","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","_id","scales","yAxes","ticks","max","min","reverse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';// on importe createContext qui servira à la création d'un ou plusieurs contextes\r\nimport { Button, FormGroup, FormControl, ControlLabel, Col,Radio } from \"react-bootstrap\";\r\n\r\nimport {Line,Radar,Bar} from 'react-chartjs-2';\r\n\r\n\r\nimport API from '../../utils/API';\r\n\r\n\r\n\r\nexport class ShowActivity extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {id} = props.match.params;\r\n        this.state = {\r\n            activitie : \"\",\r\n            components : {\r\n                line: Line,\r\n                radar: Radar,\r\n                bar: Bar,\r\n            },\r\n            tag : 'line',\r\n            value : \"\",\r\n            label : new Date.now(),\r\n            note : \"\",\r\n            history : [],\r\n            activity_id : id,\r\n        }\r\n        this.handleChange.bind(this);\r\n        this.send.bind(this);\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.makeChart();\r\n\r\n    }\r\n\r\n    makeChart = () =>{\r\n        let currentComponent = this;\r\n        API.checkToken(localStorage.getItem('token')).then(function(data){\r\n            if(data.request.status === 200){\r\n                console.log(currentComponent.state.activity_id);\r\n                API.showActivity(currentComponent.state.activity_id).then(function (data) {\r\n                    console.log(data)\r\n                    currentComponent.setState({ activitie : data.data.activity })\r\n                    currentComponent.setState({ history : data.data.activity.moods })\r\n                },function (error) {\r\n                    console.log(error);\r\n                    return;\r\n                })\r\n            }\r\n        },function (error) {\r\n            console.log(error);\r\n            return;\r\n        })\r\n    }\r\n    send = event => {\r\n        if(this.state.value.length === 0){\r\n            return;\r\n        }\r\n        if(this.state.note.length === 0){\r\n            this.state.note = \"\";\r\n        }\r\n        const currentComponent = this;\r\n        var value = this.state.value;\r\n        var note = this.state.note;\r\n        var activity = event.target.parentNode.id;\r\n        API.checkToken(localStorage.getItem('token')).then(function(data){\r\n            if(data.request.status === 200){\r\n                console.log(value,activity,note);\r\n                API.createMood(value,activity,note).then(function (data) {\r\n                    console.log(data);\r\n                    currentComponent.componentDidMount();\r\n                },function (error) {\r\n                    console.log(error);\r\n                    return;\r\n                })\r\n            }\r\n        },function (error) {\r\n            console.log(error);\r\n            return;\r\n        })\r\n\r\n    }\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    handleChart = event => {\r\n        this.setState({\r\n            tag: event.target.value\r\n        });\r\n        this.componentDidMount()\r\n    }\r\n    render() {\r\n        const TagName = this.state.components[this.state.tag || 'line'];\r\n        var values = [];\r\n        var labels = [];\r\n        this.state.history.map((item,i) =>\r\n           values.push(item.value)\r\n        )\r\n        this.state.history.map((item,i) =>\r\n        labels.push(new Date(item.created_at).toLocaleDateString())\r\n        )\r\n\r\n        const data = {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: this.state.activitie.name,\r\n                    fill: false,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(75,192,192,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 1,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 3,\r\n                    data: values\r\n                }\r\n            ]\r\n        };\r\n\r\n        return(\r\n            <div>\r\n            <div>\r\n                <h1>{this.state.activitie.name}</h1>\r\n                <ul id={this.state.activitie._id}>\r\n                    <FormGroup controlId=\"value\" bsSize=\"large\">\r\n                        <ControlLabel>Ajouter une valeur</ControlLabel>\r\n                        <FormControl autoFocus type=\"text\" value={this.state.value} onChange={this.handleChange}/>\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"label\" bsSize=\"large\">\r\n                        <ControlLabel>Ajouter un label</ControlLabel>\r\n                        <FormControl type=\"date\" value={this.state.label} onChange={this.handleChange}/>\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"note\" bsSize=\"large\">\r\n                        <ControlLabel>Ajouter une note (optionnel)</ControlLabel>\r\n                        <FormControl componentClass=\"textarea\"  value={this.state.note} onChange={this.handleChange}/>\r\n                    </FormGroup>\r\n                    <Button\r\n                        onClick={this.send}\r\n                        block\r\n                        bsSize=\"large\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Ajouter\r\n                    </Button>\r\n               </ul>\r\n            </div>\r\n            <div>\r\n                <div className=\"col-md-6\">\r\n                    <h2 className=\"col-12 text-center\">Chart</h2>\r\n                    <FormGroup>\r\n                        <Radio onChange={this.handleChart} value=\"line\" name=\"radioGroup\" inline>\r\n                            Line\r\n                        </Radio>{' '}\r\n                        <Radio onChange={this.handleChart} value=\"radar\" name=\"radioGroup\" inline>\r\n                            Radar\r\n                        </Radio>{' '}\r\n                        <Radio onChange={this.handleChart} value=\"bar\"  name=\"radioGroup\" inline>\r\n                            Bar\r\n                        </Radio>{' '}\r\n                    </FormGroup>\r\n                    <TagName data={data}\r\n                          options={{\r\n                              scales: {\r\n                              yAxes: [{\r\n                              ticks: {\r\n                              max: this.state.activitie.max,\r\n                              min: this.state.activitie.min\r\n                          }\r\n                          }]\r\n                          },}}\r\n                          width={50}\r\n                          height={25} />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <h2>Historique</h2>\r\n                <ul>\r\n                    {this.state.history.map((item,i) =>\r\n                        <li key={i}>\r\n\r\n                            <p>{new Date(item.created_at).toLocaleDateString()} - {item.value}</p>\r\n                            <p>{item.note}</p>\r\n                        </li>\r\n                    ).reverse()}\r\n\r\n                </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}